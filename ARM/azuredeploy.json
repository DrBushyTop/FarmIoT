{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceNamingPrefix":{
            "type": "string",
            "defaultValue": "farmiot",
            "maxLength": 12,
            "metadata": {
                "description": "Prefix for naming the resources"
            }
        },
        "environment":{
            "type": "string",
            "defaultValue": "test",
            "allowedValues": [
                "dev",
                "test",
                "qa",
                "prod",
                "sandbox",
                "poc"
            ],
            "metadata": {
                "description": "The environment of the deployment. Eg. prod/dev/poc/test"
            }
        },
        "webAppPlanSKU":{
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "S1",
                "S2",
                "S3"
            ],
            "metadata": {
                "description": "Size of the Web App Plan for the web front"
            }
        },
        "redisSku":{
            "type": "object",
            "defaultValue": {
                "name": "Premium",
                "family": "P",
                "capacity": 1
            },
            "metadata": {
                "description": "SKU of the redis instance"
            }
        },
        "redisShardCount":{
            "type": "string",
            "defaultValue": "2",
            "metadata": {
                "description": "Number of nodes in redis cluster"
            }
        },
        "location":{
            "type": "string",
            "defaultValue": "westeurope",
            "metadata": {
                "description": "location for all resources"
            }
        },
        "pairedLocation":{
            "type": "string",
            "defaultValue": "northeurope",
            "metadata": {
                "description": "pair location for all cosmosDB"
            }
        },
        "sendgridPassword":{
            "type": "securestring",
            "defaultValue": "D0ntS4ve1nGit",
            "metadata": {
                "description": "password for sendgrid. Will be saved to keyvault, but in production really should not have a default value."
            }
        }
    },
    "variables": {
        "prefixInLowerCase":"[tolower(parameters('resourceNamingPrefix'))]",
        "storageUrl": "[concat(uri(deployment().properties.templateLink.uri, 'storage.json'))]",
        "appInsightsUrl": "[concat(uri(deployment().properties.templateLink.uri, 'appinsights.json'))]",
        "iotHubUrl": "[concat(uri(deployment().properties.templateLink.uri, 'iothub.json'))]",
        "cosmosUrl": "[concat(uri(deployment().properties.templateLink.uri, 'cosmosdb.json'))]",
        "redisUrl": "[concat(uri(deployment().properties.templateLink.uri, 'redis.json'))]",
        "sendgridUrl": "[concat(uri(deployment().properties.templateLink.uri, 'sendgrid.json'))]",
        "functionUrl": "[concat(uri(deployment().properties.templateLink.uri, 'function.json'))]",
        "tsiUrl": "[concat(uri(deployment().properties.templateLink.uri, 'tsi.json'))]",
        "trafficManagerUrl": "[concat(uri(deployment().properties.templateLink.uri, 'trafficmanager.json'))]",
        "streamanalyticsUrl": "[concat(uri(deployment().properties.templateLink.uri, 'streamanalytics.json'))]",
        "keyVaultUrl": "[concat(uri(deployment().properties.templateLink.uri, 'keyvault.json'))]",
        "webAppUrl": "[concat(uri(deployment().properties.templateLink.uri, 'webapp.json'))]",

        "logSAName":"[concat(variables('prefixInLowerCase'), parameters('location'), 'log')]",
        "tableSAName":"[concat(variables('prefixInLowerCase'), parameters('location'), 'lcdb')]",
        "tsiSAName":"[concat(variables('prefixInLowerCase'), parameters('location'), 'tsi')]",
        "cosmosDBName":"[concat(variables('prefixInLowerCase'), parameters('location'), 'gcdb')]",
        "webAppName":"[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'front')]",
        "redisName":"[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'redis')]",
        "iotHubName":"[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'hub')]",
        "tsiName": "[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'tsi')]",
        "keyVaultName": "[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'kv')]",
        "streamAnalyticsName": "[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'stream')]",
        "addFunctionAppName": "[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'add')]",
        "configFunctionAppName": "[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'conf')]",
        "validateFunctionAppName": "[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'validate')]",
        "notificationFunctionAppName": "[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'notify')]",
        "tsiFunctionAppName": "[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'tsiapi')]",
        "scaleFunctionAppName": "[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'scale')]",
        "appInsightsName": "[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'appinsights')]",
        "trafficManagerName": "[concat(variables('prefixInLowerCase'), '-', 'tm')]",
        "sendGridName": "[concat(variables('prefixInLowerCase'), '-', parameters('location'), '-', 'sg')]",
        "tags": {"environment": "[parameters('environment')]"}
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('logSAName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('storageUrl')]"
                },
                "parameters":{
                    "StorageAccountName":{"value": "[variables('logSAName')]"},
                    "Location":{"value": "[parameters('location')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('tableSAName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('storageUrl')]"
                },
                "parameters":{
                    "StorageAccountName":{"value": "[variables('tableSAName')]"},
                    "Location":{"value": "[parameters('location')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('tsiSAName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('storageUrl')]"
                },
                "parameters":{
                    "StorageAccountName":{"value": "[variables('tsiSAName')]"},
                    "Location":{"value": "[parameters('location')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('appinsightsName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('appInsightsUrl')]"
                },
                "parameters":{
                    "appInsightsName":{"value": "[variables('appInsightsName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('redisName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('redisUrl')]"
                },
                "parameters":{
                    "name":{"value": "[variables('redisName')]"},
                    "sku":{"value": "[parameters('redisSku')]"},
                    "shardcount":{"value": "[parameters('redisShardCount')]"},
                    "location":{"value": "[parameters('location')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('cosmosDBName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('cosmosUrl')]"
                },
                "parameters":{
                    "name":{"value": "[variables('logSAName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "pairedlocation": {"value": "[parameters('pairedLocation')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('iotHubName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('iotHubUrl')]"
                },
                "parameters":{
                    "name":{"value": "[variables('iotHubName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('scaleFunctionAppName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('functionUrl')]"
                },
                "parameters":{
                    "functionAppName":{"value": "[variables('scaleFunctionAppName')]"},
                    "logSAName":{"value": "[variables('logSAName')]"},
                    "appInsightsName":{"value": "[variables('appInsightsName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "runtime":{"value": "dotnet"},
                    "keyVaultName":{"value": "[variables('keyVaultName')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('logSAName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('iotHubName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('appInsightsName'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('sendGridName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('sendgridUrl')]"
                },
                "parameters":{
                    "name":{"value": "[variables('sendGridName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "tags":{"value": "[variables('tags')]" },
                    "password":{"value": "[parameters('sendgridPassword')]"}
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('notificationFunctionAppName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('functionUrl')]"
                },
                "parameters":{
                    "functionAppName":{"value": "[variables('notificationFunctionAppName')]"},
                    "logSAName":{"value": "[variables('logSAName')]"},
                    "appInsightsName":{"value": "[variables('appInsightsName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "runtime":{"value": "dotnet"},
                    "keyVaultName":{"value": "[variables('keyVaultName')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('logSAName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('sendGridName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('appInsightsName'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('streamAnalyticsName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('streamanalyticsUrl')]"
                },
                "parameters":{
                    "name":{"value": "[variables('streamAnalyticsName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "iotHubName":{"value": "[variables('iotHubName')]"},
                    "consumerGroup":{"value": "[reference(variables('iotHubName')).outputs.consumerGroupName.value]"},
                    "notificationFunctionAppName": {"value":"[variables('notificationFunctionAppName')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('sendGridName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('notificationFunctionAppName'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('validateFunctionAppName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('functionUrl')]"
                },
                "parameters":{
                    "functionAppName":{"value": "[variables('validateFunctionAppName')]"},
                    "logSAName":{"value": "[variables('logSAName')]"},
                    "appInsightsName":{"value": "[variables('appInsightsName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "keyVaultName":{"value": "[variables('keyVaultName')]"},
                    "runtime":{"value": "dotnet"},
                    "tags":{"value": "[variables('tags')]" }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('logSAName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('appInsightsName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('iotHubName'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('configFunctionAppName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('functionUrl')]"
                },
                "parameters":{
                    "functionAppName":{"value": "[variables('configFunctionAppName')]"},
                    "logSAName":{"value": "[variables('logSAName')]"},
                    "appInsightsName":{"value": "[variables('appInsightsName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "keyVaultName":{"value": "[variables('keyVaultName')]"},
                    "runtime":{"value": "dotnet"},
                    "tags":{"value": "[variables('tags')]" }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('validateFunctionAppName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('logSAName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('appInsightsName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('iotHubName'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('addFunctionAppName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('functionUrl')]"
                },
                "parameters":{
                    "functionAppName":{"value": "[variables('addFunctionAppName')]"},
                    "logSAName":{"value": "[variables('logSAName')]"},
                    "appInsightsName":{"value": "[variables('appInsightsName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "keyVaultName":{"value": "[variables('keyVaultName')]"},
                    "runtime":{"value": "dotnet"},
                    "tags":{"value": "[variables('tags')]" }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('logSAName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('appInsightsName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('iotHubName'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('tsiFunctionAppName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('functionUrl')]"
                },
                "parameters":{
                    "functionAppName":{"value": "[variables('tsiFunctionAppName')]"},
                    "logSAName":{"value": "[variables('logSAName')]"},
                    "appInsightsName":{"value": "[variables('appInsightsName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "keyVaultName":{"value": "[variables('keyVaultName')]"},
                    "runtime":{"value": "node"},
                    "tags":{"value": "[variables('tags')]" }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('logSAName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('appInsightsName'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('tsiName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('tsiUrl')]"
                },
                "parameters":{
                    "name":{"value": "[variables('tsiName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "tags":{"value": "[variables('tags')]" },
                    "iotHubName":{"value": "[variables('iotHubName')]"},
                    "tsiFunctionObjectID":{"value": "[reference(variables('tsiFunctionAppName')).outputs.ObjectID.value]"},
                    "storageAccountName":{"value": "[variables('tsiSAName')]"}
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('tsiSAName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('iotHubName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('tsiFunctionAppName'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('webAppName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('webAppUrl')]"
                },
                "parameters":{
                    "webAppName":{"value": "[variables('webAppName')]"},
                    "sku":{"value": "[parameters('webAppPlanSKU')]"},
                    "logSAName":{"value": "[variables('logSAName')]"},
                    "appInsightsName":{"value": "[variables('appInsightsName')]"},
                    "redisName":{"value": "[variables('redisName')]"},
                    "gcdbName":{"value": "[variables('cosmosDBName')]"},
                    "lcdbName":{"value": "[variables('tableSAName')]"},
                    "keyVaultName":{"value": "[variables('keyVaultName')]"},
                    "location":{"value": "[parameters('location')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('logSAName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('tableSaName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('cosmosDBName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('appInsightsName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('redisName'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('keyVaultName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('keyVaultUrl')]"
                },
                "parameters":{
                    "keyVaultName": {"value": "[variables('keyVaultName')]"},
                    "tenantId": {"value": "[reference(variables('webAppName')).outputs.tenantId.value]"},
                    "objectIDs": {"value": [
                        "[reference(variables('webAppName')).outputs.ObjectID.value]",
                        "[reference(variables('addFunctionAppName')).outputs.ObjectID.value]",
                        "[reference(variables('configFunctionAppName')).outputs.ObjectID.value]",
                        "[reference(variables('notificationFunctionAppName')).outputs.ObjectID.value]",
                        "[reference(variables('scaleFunctionAppName')).outputs.ObjectID.value]",
                        "[reference(variables('tsiFunctionAppName')).outputs.ObjectID.value]",
                        "[reference(variables('validateFunctionAppName')).outputs.ObjectID.value]"
                    ]},
                    "redisName":{"value": "[variables('redisName')]"},
                    "gcdbName":{"value": "[variables('cosmosDBName')]"},
                    "lcdbName":{"value": "[variables('tableSAName')]"},
                    "sendgridPassword":{"value": "[parameters('sendgridPassword')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('webAppName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('addFunctionAppName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('configFunctionAppName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('notificationFunctionAppName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('scaleFunctionAppName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('tsiFunctionAppName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('validateFunctionAppName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('redisName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('cosmosDBName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('tableSAName'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('trafficManagerName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink":{
                    "uri": "[variables('trafficManagerUrl')]"
                },
                "parameters":{
                    "name": {"value": "[variables('trafficManagerName')]"},
                    "webAppName": {"value": "[variables('webAppName')]"},
                    "tags":{"value": "[variables('tags')]" }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('webAppName'))]"
            ]
        }
    ],
    "outputs": {
        "logSAName":{
            "type": "string",
            "value": "[variables('logSAName')]"
        },
        "tableSAName":{
            "type": "string",
            "value": "[variables('tableSAName')]"
        },
        "webAppName":{
            "type": "string",
            "value": "[variables('webAppName')]"
        },
        "addFunctionAppName":{
            "type": "string",
            "value": "[variables('addFunctionAppName')]"
        },
        "configFunctionAppName":{
            "type": "string",
            "value": "[variables('configFunctionAppName')]"
        },
        "notificationFunctionAppName":{
            "type": "string",
            "value": "[variables('notificationFunctionAppName')]"
        },
        "scaleFunctionAppName":{
            "type": "string",
            "value": "[variables('scaleFunctionAppName')]"
        },
        "validateFunctionAppName":{
            "type": "string",
            "value": "[variables('validateFunctionAppName')]"
        },
        "iotHubName":{
            "type": "string",
            "value": "[variables('iotHubName')]"
        },
        "cosmosDBName":{
            "type": "string",
            "value": "[variables('cosmosDBName')]"
        },
        "redisName":{
            "type": "string",
            "value": "[variables('redisName')]"
        },
        "appInsightsName":{
            "type": "string",
            "value": "[variables('appInsightsName')]"
        }
    }
}